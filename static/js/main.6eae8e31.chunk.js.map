{"version":3,"sources":["components/Wrapper.js","components/App.js","index.js"],"names":["colors","NewQuoteButton","props","onClick","id","className","style","backgroundColor","color","getRandomItem","array","length","Math","floor","random","Wrapper","state","newQuote","bind","console","log","this","quotes","quote","changesQuote","newColor","setState","fetch","response","json","author","href","target","Component","store","createStore","action","type","Container","connect","dispatch","changeQuote","App","React","ReactDOM","render","document","getElementById"],"mappings":"uTAGMA,G,MAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAyDzI,SAASC,EAAgBC,GACrB,OACG,4BACMC,QAASD,EAAMC,QACfC,GAAG,YACHC,UAAU,gBACVC,MAAO,CAACC,gBAAiBL,EAAMM,QAJrC,OAUP,SAASC,EAAcC,GACnB,IAAIC,EAAUD,EAAMC,OAEpB,OAAOD,EADKE,KAAKC,MAAMD,KAAKE,SAAWH,IAI5BI,M,kDAxEX,WAAYb,GAAO,IAAD,8BACd,cAAMA,IAEDc,MAAQ,CACVR,MAAO,WAGV,EAAKS,SAAY,EAAKA,SAASC,KAAd,gBAPH,E,uDAWdC,QAAQC,IAAIC,KAAKC,QACjB,IAAIC,EAAQd,EAAcY,KAAKC,QAC/BD,KAAKnB,MAAMsB,aAAaD,GACxBF,KAAKI,a,iCAIL,IAAMjB,EAAQC,EAAcT,GAC5BqB,KAAKK,SAAS,CACVlB,MAAOA,M,kKAKC,yI,SACUmB,MADV,0I,cACPC,E,gBACaA,EAASC,O,cAA1BD,E,gBACiBA,EAASN,O,OAA1BM,E,OAEAP,KAAKC,OAASM,EACVL,EAAQd,EAAcmB,GAC1BP,KAAKnB,MAAMsB,aAAaD,G,sIAIzB,IAAMA,EAAQF,KAAKnB,MAAMqB,MAAMA,MACzBO,EAAST,KAAKnB,MAAMqB,MAAMO,OAC1BxB,EAAQ,CACVE,MAAOa,KAAKL,MAAMR,OAEtB,OACE,yBAAKJ,GAAG,aACJ,wBAAIA,GAAG,OAAOE,MAAOA,GAAQiB,GAC7B,uBAAGnB,GAAG,UAAU0B,GAClB,yBAAKzB,UAAU,qBACV,uBAAGD,GAAG,cAAc2B,KAAI,2BAA8BC,OAAO,UAA7D,WACA,kBAAC/B,EAAD,CAAgBE,QAASkB,KAAKJ,SAAUT,MAAOa,KAAKL,MAAMR,c,GAhDrDyB,a,eCatB,IAEMC,EAAQC,aAXd,WAA2C,IAApBnB,EAAmB,uDAAX,GAAIoB,EAAO,uCACtC,OAAOA,EAAOC,MACX,IAJU,WAKH,OAAOD,EAAOnB,SACrB,QACI,OAAOD,MAuBlB,IAAMsB,EAAYC,aAflB,SAAyBvB,GACrB,MAAO,CACHO,MAAQP,MAIhB,SAA4BwB,GACxB,MAAO,CACHhB,aAAa,SAACD,GACViB,EAbQ,SAAAjB,GAAK,MAAG,CAACc,KAXZ,WAW4BpB,SAAUM,GAalCkB,CAAYlB,QAMfgB,CAA6CxB,GAkBhD2B,E,kDAbX,WAAYxC,GAAO,uCACTA,G,qDAIN,OACE,kBAAC,IAAD,CAAUgC,MAAOA,GACd,kBAAC,EAAD,W,GARKD,aCpCZK,G,wDACF,WAAYpC,GAAO,uCACTA,G,qDAKN,OACI,yBAAKG,UAAU,aACb,kBAAC,EAAD,W,GATUsC,IAAMV,YAiB9BW,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.6eae8e31.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../styles/wrapper.css\";\r\n\r\nconst colors = ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\r\n\r\nclass Wrapper extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n           color: '#16a085'\r\n        }\r\n\r\n        this.newQuote =  this.newQuote.bind(this);\r\n    }\r\n\r\n    newQuote(){\r\n        console.log(this.quotes);\r\n        let quote = getRandomItem(this.quotes);\r\n        this.props.changesQuote(quote); \r\n        this.newColor();\r\n    }\r\n\r\n    newColor(){\r\n        const color = getRandomItem(colors);\r\n        this.setState({\r\n            color: color\r\n        });\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const URL = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\r\n         let response = await fetch(URL);\r\n         response = await response.json();\r\n         response = await response.quotes;\r\n         //Store quotes from call to web service\r\n         this.quotes = response;\r\n         let quote = getRandomItem(response);\r\n         this.props.changesQuote(quote);\r\n    }\r\n\r\n    render(){\r\n        const quote = this.props.quote.quote;\r\n        const author = this.props.quote.author;\r\n        const style = {\r\n            color: this.state.color\r\n        }\r\n        return (\r\n          <div id=\"quote-box\">\r\n              <h1 id=\"text\" style={style}>{quote}</h1>\r\n              <p id=\"author\">{author}</p>\r\n            <div className=\"container-options\">\r\n                 <a id=\"tweet-quote\" href={`twitter.com/intent/tweet`} target=\"_blank\">Twitter</a>\r\n                 <NewQuoteButton onClick={this.newQuote} color={this.state.color}/>\r\n            </div>   \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction NewQuoteButton (props){\r\n    return (\r\n       <button \r\n             onClick={props.onClick} \r\n             id=\"new-quote\"\r\n             className=\"new-quote-btn\"\r\n             style={{backgroundColor: props.color}}>\r\n             New\r\n       </button>\r\n    );\r\n}\r\n\r\nfunction getRandomItem(array){\r\n    let length =  array.length;\r\n    let index = Math.floor(Math.random() * length);\r\n    return array[index];\r\n}\r\n\r\nexport default Wrapper;\r\n\r\n","import  React, { Component } from \"react\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport /*Redux, */{ createStore } from \"redux\";\r\nimport /*ReactRedux,*/ { Provider, connect } from \"react-redux\";\r\n\r\n\r\n//Action to dispatch\r\nconst NEW_NOTE = \"NEW_NOTE\";\r\n\r\nfunction quotesReducer(state = {}, action){\r\n    switch(action.type){\r\n       case NEW_NOTE:\r\n              return action.newQuote;\r\n       default: \r\n           return state;\r\n    }\r\n}\r\n\r\nconst changeQuote = quote=>({type: NEW_NOTE, newQuote: quote});\r\n\r\nconst store = createStore(quotesReducer);\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        quote : state\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        changesQuote:(quote)=>{\r\n            dispatch(changeQuote(quote));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Wrapper);\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <Provider store={store}>\r\n             <Container/>\r\n          </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./styles/container.css\";\r\n\r\nclass Container extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n              <App/>\r\n            </div>\r\n        );\r\n       \r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(<Container />, document.getElementById(\"root\"));\r\n\r\n\r\n"],"sourceRoot":""}